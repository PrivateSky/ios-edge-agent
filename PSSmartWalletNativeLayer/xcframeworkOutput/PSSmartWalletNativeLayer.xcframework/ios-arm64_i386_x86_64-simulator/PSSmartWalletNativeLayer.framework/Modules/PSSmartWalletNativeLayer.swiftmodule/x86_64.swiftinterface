// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
// swift-module-flags: -target x86_64-apple-ios10.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name PSSmartWalletNativeLayer
import CryptoKit
import Foundation
import GCDWebServers
@_exported import PSSmartWalletNativeLayer
import Swift
import WebKit
import _Concurrency
public enum Error : Swift.Error {
  case nameAlreadyInUse(apiName: Swift.String)
  case noAvailablePort
}
public struct APIError : Swift.Error {
  public init(code: Swift.String)
}
extension PSSmartWalletNativeLayer.APIError {
  public static let noSuchApiError: PSSmartWalletNativeLayer.APIError
}
public enum APIValue {
  case string(Swift.String)
  case number(Swift.Double)
  case bytes(Foundation.Data)
}
public typealias APIResultCompletion = (Swift.Result<[PSSmartWalletNativeLayer.APIValue], PSSmartWalletNativeLayer.APIError>) -> Swift.Void
public typealias APIImplementation = (_ inputArguments: [PSSmartWalletNativeLayer.APIValue], _ completion: @escaping PSSmartWalletNativeLayer.APIResultCompletion) -> Swift.Void
public protocol StreamAPIImplementation {
  func openStream(input: [PSSmartWalletNativeLayer.APIValue], completion: @escaping (Swift.Result<Swift.Void, PSSmartWalletNativeLayer.APIError>) -> Swift.Void)
  func retrieveNext(input: [PSSmartWalletNativeLayer.APIValue], into: @escaping (Swift.Result<[PSSmartWalletNativeLayer.APIValue], PSSmartWalletNativeLayer.APIError>) -> Swift.Void)
  func close()
}
public enum DataStreamSessionAction {
  case chunk(Foundation.Data)
  case close
}
public protocol DataStreamSessionDelegate {
  func provideNext(action: @escaping (PSSmartWalletNativeLayer.DataStreamSessionAction) -> Swift.Void)
  func handlePeerClose()
}
public typealias DataStreamSessionDelegateCompletion = (Swift.Result<PSSmartWalletNativeLayer.DataStreamSessionDelegate, PSSmartWalletNativeLayer.APIError>) -> Swift.Void
public typealias DataStreamAPIImplementation = ([Any], @escaping PSSmartWalletNativeLayer.DataStreamSessionDelegateCompletion) -> Swift.Void
@available(iOS 13.0, *)
public struct Curve25519KeyPair {
  public static let implementation: (_ inputValues: [PSSmartWalletNativeLayer.APIValue], _ callback: @escaping PSSmartWalletNativeLayer.APIResultCompletion) -> Swift.Void
}
@_hasMissingDesignatedInitializers public class TestTextStreaming : PSSmartWalletNativeLayer.DataStreamSessionDelegate {
  public static let implementation: ([Any], _ completion: @escaping PSSmartWalletNativeLayer.DataStreamSessionDelegateCompletion) -> Swift.Void
  public func provideNext(action: @escaping (PSSmartWalletNativeLayer.DataStreamSessionAction) -> Swift.Void)
  public func handlePeerClose()
  @objc deinit
}
public class APIContainer {
  public enum Mode {
    case withWebApp(PSSmartWalletNativeLayer.APIContainer.WebAppConfiguration)
    case apiOnly(selectedPort: Swift.UInt?)
  }
  public struct WebAppConfiguration {
    public let webAppDirectory: Swift.String
    public let indexFilename: Swift.String
    public init(webAppDirectory: Swift.String, indexFilename: Swift.String)
  }
  final public let port: Swift.UInt
  public var serverOrigin: Swift.String {
    get
  }
  public var webAppOrigin: Swift.String {
    get
  }
  public init(mode: PSSmartWalletNativeLayer.APIContainer.Mode) throws
  public func addAPI(name: Swift.String, implementation: @escaping PSSmartWalletNativeLayer.APIImplementation) throws
  public func addStreamAPI(name: Swift.String, implementation: PSSmartWalletNativeLayer.StreamAPIImplementation) throws
  public func addDataStreamAPI(name: Swift.String, implementation: @escaping PSSmartWalletNativeLayer.DataStreamAPIImplementation) throws
  @objc deinit
}
